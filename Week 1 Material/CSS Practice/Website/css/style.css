body{
    background-color: lightgray;
    color: #555;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 16px;
    line-height: 1.6em;
    margin: 0;
}

.container{
    width: 80%;
    margin: auto;
    overflow:hidden;
}

#main-header{
    background-color: coral;
    color: #fff;
}

#navbar{
    background-color: #333;
    color: #fff
}
#navbar ul{
    padding: 0;
    list-style: none;
}

#navbar li{
    display: inline;
}

#navbar a{
    color: #fff;
    text-decoration: none;
    font-size: 18px;
    padding-right: 15px;
}

#showcase{
    background-image: url(../images/showcase.jpg);
    background-position: center right;
    min-height: 300px;
    margin-bottom: 30px;
    text-align: 30px;
    background-repeat: no-repeat;
    background-size: cover;
}

#showcase h1{
    color:#fff;
    font-size: 50px;
    line-height: 1.6em;
    padding-top: 30px;
}

#main{
    float: left;
    width: 70%;
    padding: 0 30px;
    box-sizing: border-box;
}

#sidebar{
    float:right;
    width: 30%;
    background-color: #333;
    color: #fff;
    padding: 10px;
    box-sizing: border-box;
}

#main-footer{
    background-color: #333;
    color: #fff;
    text-align: center;
    padding: 20px;
    margin-top: 40px;
}

/* Add responsiveness to components that go below or beyond a limit*/
@media(max-width:600px){
    #main{
        width: 100%;
        float: none;
    }

    #sidebar{
        width: 100%;
        float: none;
    }
}

/* Notes about Flexbox layout */
/* 
Display: flex --> puts things inline
flex-direction: column --> can adjust things to be like block alignment but has good properties
align-items: center --> most used and important, centers vertically.
aling-items: flex-end --> pushed all elements to bottom of container.
justify-content: flex-start --> Default setting, but aligns horizontally.
justify-content: center --> centers it horizontally.
justify-content: flex-end --> psuhes to the end horizontally.
justify-content: space-around --> space around and between elements are equal.
justify-content: space-between --> pushes furthest most elements to the side, then equalizes space between all elements.

Align-items and Justify-content can be used together to style elements.

Align-items and Justify-content and Flex-direction can be used together to style elements.
If Flex-direction == Column:
    justify-content aligns vertically
    align-items aligns horizontally
*/
